# This file contains all values that override the default values from 
#    pingidentity/ping-devops helm chart that should apply to prod and lower environments
# All variables `GITHUB_REF` on this file are defined in scripts/lib.sh 
#  and will be converted to hardcoded strings by the script

# Settings to be applied to every product are defined under global
global:
  ingress:
    enabled: true
    addReleaseNameToHost: prepend
    defaultDomain: "ping-devops.com"
    defaultTlsSecret:
    annotations:
      nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
      kubernetes.io/ingress.class: "nginx-public"
  # Environment variables that should exist in every product are listed in global.envs
  envs:
    ## CHANGEME - hardcode this line
    SERVER_PROFILE_URL: "https://github.com/samir-gandhi/pingidentity-devops-reference-pipeline.git"
    ## CHANGEME - hardcode this line
    SERVER_PROFILE_ADMIN_URL: "https://github.com/samir-gandhi/pingidentity-devops-reference-pipeline.git"

pingaccess-admin:
  privateCert:
    generate: true
  enabled: true
  envs:
    # PingAccess Admin Console will receive the admin and engine profile.
    SERVER_PROFILE_ADMIN_PATH: profiles/pingaccess-admin
    # On the default values.yaml we expect to be on a release TAG for deployment
    #   a dry-run on master will show branch as empty
    SERVER_PROFILE_PARENT: ADMIN
    SERVER_PROFILE_PATH: profiles/pingaccess-engine
    # <PRODUCT>_PROFILE_SHA is used to trigger a rolling update of the product
    #   SHA is based on git history of the profiles folder.
    PA_ADMIN_PROFILE_SHA: "${PINGACCESS_ADMIN_SHA}"
    PA_ENGINE_PROFILE_SHA: "${PINGACCESS_ENGINE_SHA}"

pingaccess-engine:
  enabled: true
  envs:
    SERVER_PROFILE_PATH: profiles/pingaccess-engine
    PA_ENGINE_PROFILE_SHA: "${PINGACCESS_ENGINE_SHA}"
  # For products where more than 1 instance may be desired, the replicaCount option is included
  container:
    replicaCount: 1
    # For PingAccess, CPU can be vertically scaled
    resources:
      requests:
        cpu: 0
      limits:
        cpu: 2

pingfederate-admin:
  enabled: true
  envs:
    SERVER_PROFILE_ADMIN_PATH: profiles/pingaccess-admin
    SERVER_PROFILE_PARENT: ADMIN
    SERVER_PROFILE_PATH: profiles/pingaccess-engine

    PF_ADMIN_PROFILE_SHA: "${PINGFEDERATE_ADMIN_SHA}"
    PF_ENGINE_PROFILE_SHA: "${PINGFEDERATE_ENGINE_SHA}"
  # pingfederate-admin is configured as a statefulset to match 
  #   the operating pattern from devops.pingidentity.com
  workload:
    type: StatefulSet
    statefulSet:
      persistentvolume:
        volumes:
          out-dir:
            mountPath: /opt/out/instance/server/default/data
            persistentVolumeClaim:
              resources:
                requests:
                  storage: 8Gi

pingfederate-engine:
  enabled: true
  envs:
    SERVER_PROFILE_PATH: profiles/pingfederate-engine
    PF_ENGINE_PROFILE_SHA: "${PINGFEDERATE_ENGINE_SHA}"
  container:
    replicaCount: 1
    # For PingFederate, CPU can be vertically scaled
    resources:
      requests:
        cpu: 0
      limits:
        cpu: 2

pingdirectory:
  enabled: true
  envs:
    SERVER_PROFILE_PATH: profiles/pingdirectory
    PD_PROFILE_SHA: "${PINGDIRECTORY_SHA}"
  container:
    replicaCount: 1
    # For PingDirectory, CPU can be vertically scaled, but memory request/limit should be equal
    #   PingDirectory stores the Database in memory, allocate memory accordingly
    resources:
      requests:
        cpu: 0
        memory: 2Gi
      limits:
        cpu: 2
        memory: 2Gi

pingdataconsole:
  enabled: true
  envs:
    SERVER_PROFILE_PATH: profiles/pingdataconsole
    PDC_PROFILE_SHA: "${PINGDATACONSOLE_SHA}"

pingauthorize:
  enabled: true
  envs:
    SERVER_PROFILE_PATH: profiles/pingauthorize
    PAZ_PROFILE_SHA: "${PINGAUTHORIZE_SHA}"
  container:
    replicaCount: 1
    waitFor:
      pingdirectory:
        service: ldaps
        timeoutSeconds: 600